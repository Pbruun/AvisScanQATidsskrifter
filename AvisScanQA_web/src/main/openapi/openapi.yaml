openapi: 3.0.2

info:
  version: "${project.version}"
  title: "${project.name}"
  description: |
    ${project.description}
  contact:
    email: "${user.name}@kb.dk"
  license:
    name: "${license.name}"
    url: "${license.url}"

servers:
  #  /api must match servlet-mapping in web.xml
  - url: "/${project.artifactId}/api"
    description: "Current server"

paths:
  /getNewspaperIDs:
    get:
      operationId: getNewspaperIDs
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string

  /years/{newspaperID}:
    get:
      operationId: getYearsForNewspaper
      parameters:
        - name: newspaperID
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string


  /getNewspaperBatches:
    get:
      operationId: getBatchIDs
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Batch"


  /batch/{batchID}:
    get:
      operationId: getBatchForNewspaper
      parameters:
        - name: batchID
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Batch"


  /dates/{newspaperID}/{year}:
    get:
      #TODO this should return more than just dates. A bit of metadata per date, such as the page count and if any errors occurred
      operationId: getDatesForNewspaperYear
      parameters:
        - name: newspaperID
          in: path
          required: true
          schema:
            type: string
        - name: year
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NewspaperDate'

  /dates/{newspaperID}/{date}/mappedEntities:
    get:
      operationId: getMappedEntititesForNewspaperDate
      parameters:
        - name: newspaperID
          in: path
          required: true
          schema:
            type: string
        - name: date
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewspaperEntityMapping'

  /entity/{handle}/url/{type}:
    get:
      operationId: getEntityURL
      parameters:
        - name: handle
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: type
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema:
                type: string
                format: uri

  /entity/{handle}/characterization}:
    get:
      operationId: getEntityCharacterization
      parameters:
        - name: handle
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CharacterizationInfo'


components:
  schemas:
    Batch:
      type: object
      properties:
        batchid:
          type: string
        avisid:
          type: string
        roundtrip:
          type: integer
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        deliveryDate:
          type: string
          format: date
        problems:
          type: string
          nullable: true
        state:
          type: string

    NewspaperDate:
      type: object
      properties:
        date:
          type: string
          format: date
        pageCount:
          type: integer
        problems:
          type: string

    NewspaperEntityMapping: # <---- dictionary
      type: object
      additionalProperties:
        type: array
        items:
          $ref: '#/components/schemas/NewspaperEntity'

    NewspaperEntity:
      type: object
      properties:
        origRelpath:
          type: string
        formatType:
          type: string
        editionDate:
          type: string
          format: date
        singlePage:
          type: boolean
        pageNumber:
          type: integer
        avisid:
          type: string
        avistitle:
          type: string
        shadowPath:
          type: string
        sectionTitle:
          type: string
        editionTitle:
          type: string
        deliveryDate:
          type: string
          format: date
        handle:
          type: integer
          format: int64
        fraktur:
          type: boolean
        problems:
          type: string



    CharacterizationInfo:
      type: object
      properties:
        origRelpath:
          type: string
        tool:
          type: string
        characterisationDate:
          type: string
          format: date
        toolOutput:
          type: string
        status:
          type: string
